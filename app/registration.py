from aiogram import Router, F, html
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.filters import CommandStart, StateFilter, Command
from aiogram.types import Message, CallbackQuery
from aiogram.enums import ParseMode, ChatAction
from random import choice
from dotenv import dotenv_values
from time import time
from asyncio import sleep
from pprint import pprint

from app.filters import NameFilter, AgeLimit
from app.keyboards import (checking_choise_markup, checking_cancel_markup,
                           make_keyboard_accepting, make_profile_markup,
                           shop_markup)
from app.poll import ContestStates
from database.database import new_user, get_user

hand_emojies = ['üëä', '‚úä', 'üëå', '‚òù', 'üëé', 'üëç', '‚úå', 'üñê', 'üññ', 'ü§ô', 'ü§ü']

ADMIN_GROUP_ID = dotenv_values().get('ADMIN_GROUP_ID')

RULES = f'''{html.bold('–î–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è!üè≥Ô∏è‚Äçüåà')}
{html.italic('üî•–í—Å–µ—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –Ω–∞—à–µ–º –ª–∞–º–ø–æ–≤–æ–º gay-—á–∞—Ç–∏–∫–µüî•')}

{html.bold('üëâ–ü–†–ê–í–ò–õ–ê:üëà')}
1.1 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å, –∑–∞–¥–µ–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ - –º—É—Ç/–±–∞–Ω.
1.2 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ–±—Å—É–∂–¥–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É - –º—É—Ç.
1.3 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –≤ –ª—é–±—ã—Ö —Ñ–æ—Ä–º–∞—Ö –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å –Ω–∞—Ü–∏–∑–º, —Ä–∞—Å–∏–∑–º –∏ –ø—Ä. (—Å—Ç–∏–∫–µ—Ä—ã –∫ —ç—Ç–æ–º—É –æ—Ç–Ω–æ—Å—è—Ç—Å—è) –¥–≤–∏–∂–µ–Ω–∏—è, –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –≤–µ—Ä—É - –±–∞–Ω.
1.4 –°–ª–∏–≤–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–æ—Ç–æ* —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –±–µ–∑ –∏—Ö —Å–æ–≥–ª–∞—Å–∏—è - –±–∞–Ω.
1.5 –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è* –∞–¥–º–∏–Ω–æ–≤ - –º—É—Ç/–±–∞–Ω.
1.6 –û–±—Å—É–∂–¥–∞—Ç—å –∏ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å —Å—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã–µ –º—ã—Å–ª–∏*, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–µ–ª—Ñ—Ö–∞—Ä–º*, –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ*, –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Ä—É—é—â–µ–µ –≤—ã—à–µ—Å–∫–∞–∑–∞–Ω–Ω–æ–µ - –º—É—Ç/–±–∞–Ω.
1.7 –ù–µ–∞–∫—Ç–∏–≤ >=5 –¥–Ω–µ–π –∏ –±–æ–ª–µ–µ (–±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–∏—á–∏–Ω—ã) - –∫–∏–∫
(–º–æ–∂–Ω–æ –ø–æ—Å–ª–µ –∑–∞–Ω–æ–≤–æ –≤—Å—Ç—É–ø–∏—Ç—å –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏, –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –µ—ë –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è.
1.8 –ó–∞–ø—Ä–µ—â–µ–Ω–æ —à—É—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –∏–∑ –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–µ–º.


2.1 –†–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã*, —Å–∞–π—Ç—ã* –∏ –±–æ—Ç—ã* –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤ - –≤–∞—Ä–Ω/–º—É—Ç.
2.2 –°–ø–∞–º–∏—Ç—å* –∏ —Ñ–ª—É–¥–∏—Ç—å* - –º—É—Ç/–±–∞–Ω.
2.3 –û–±–∏–∂–∞—Ç—å—Å—è –∏ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è - –∞—Ç–∞-—Ç–∞ –ø–æ –ø–æ–ø–µ.

3.1 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –≤ —á–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π*, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É —É –∞–¥–º–∏–Ω–∞, –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –≤—Å–µ—Ö –∫ –æ–¥–Ω–æ–º—É –∏–∑ –∞–¥–º–∏–Ω–æ–≤, –æ–Ω–∏ –∑–∞—á—Ç—É—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ - –º—É—Ç/–±–∞–Ω/–ø–æ–Ω–∏–∂–µ–Ω–∏–µ.
3.2 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞–∫—Ä—É—á–∏–≤–∞—Ç—å –≥–æ–ª–æ—Å–∞ –≤ –∫–æ–Ω–∫—É—Ä—Å–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è—Ö*, –ø–æ–¥–∫—É–ø–∞—Ç—å, –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –≥—Ä—É–ø–ø—ã - –¥–∏—Å–∫–≤–∞–ª–∏–∫–∞—Ü–∏—è.
3.3 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –≤—ã–¥–∞–≤–∞—Ç—å —á—É–∂–∏–µ* —Ñ–æ—Ç–æ –∑–∞ —Å–≤–æ–∏ –≤ —á–∞—Ç–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ–∑ –∏—Ö —Å–æ–≥–ª–∞—Å–∏—è - –±–∞–Ω.
3.4 –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–ª–∏–≤–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–æ—Ç–æ* —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤* –±–µ–∑ –∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è - –±–∞–Ω.
3.5 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ –∫–æ–Ω–∫—É—Ä—Å —á—É–∂–∏–µ —Ñ–æ—Ç–æ - –±–∞–Ω.
3.6 –ó–∞–ø—Ä–µ—â–µ–Ω —à–∞–Ω—Ç–∞–∂*, –ø—Ä–æ–±–∏–≤* –∏ —Å–ø–∞–º* —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - –±–∞–Ω.

4.1 –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ä–∞–∑–≤–æ–¥–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã* —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
4.2 –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–∫–∏–¥—ã–≤–∞—Ç—å –≤ —á–∞—Ç –î–ü*.

{html.italic('"*" - –Ω–µ—Å–µ—Ç –ø—Ä—è–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –õ–Æ–ë–´–ï/–õ–Æ–ë–û–ï.')}

{html.bold('‚ò†Ô∏è–ù–µ–∑–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. ‚ò†Ô∏è')}

{html.bold('üëâ–ï—â–µ –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüëà')}
–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å –ª—é–¥–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–º —ç—Ç–æ–≥–æ –±–æ—Ç–∞.
–¢–∞–∫–∂–µ –ø–∏—à–∏—Ç–µ, –∫–æ–≥–æ –ø—Ä–∏–≤–µ–ª–∏ –≤—ã.

{html.bold('üî•–ó–∞ –∫–∞–∂–¥—ã–µ 10 —á–µ–ª–æ–≤–µ–∫ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ üéÅüî•')}

{html.bold('‚ù§Ô∏è‚Äçüî•–£–µ–±—É –∫—Ç–æ –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç‚ù§Ô∏è‚Äçüî•')}

{html.bold('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ!üòù')}'''


class RegistrationStates(StatesGroup):
    name = State()
    age = State()
    task = State()
    video_note = State()
    photoes = State()
    checking = State()


reg_router = Router()
reg_router.message.filter(F.chat.type == 'private')
admin_chat_router = Router()
admin_chat_router.message.filter(F.chat.type.in_(['group', 'supergroup']))


@reg_router.message(F.document)
async def get_photo_id(message: Message):
    pprint(message.document)


async def typing(message: Message):
    await message.bot.send_chat_action(message.chat.id, ChatAction.TYPING)
    await sleep(1.5)


@reg_router.message(RegistrationStates.checking, Command('restart'))
async def restart(message: Message, state: FSMContext):
    await state.clear()
    await state.update_data(id=message.from_user.id)
    await start(message, state)


@reg_router.message(StateFilter(ContestStates.registrated, ContestStates.voted), CommandStart())
@reg_router.message(StateFilter(None), CommandStart())
@reg_router.message(RegistrationStates.checking, CommandStart())
async def start(message: Message, state: FSMContext):
    data = await state.get_data()
    user = await get_user(data.get('id'))
    if not user:
        user = await get_user(message.from_user.id)
    print(data.get('id'))
    print(user)
    if user:
        name = user['name']
        coins = user['coins']
        await typing(message)
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç–∏–∫, {name}^^\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç–æ–∫: {coins}\n–ù–∞–ø–∏—à–∏ "/shop", —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω—á–∏–∫^^')
    elif not (await state.get_state() is None):
        await typing(message)
        await message.answer('–ü–æ–¥–æ–∂–¥–∏, –∫–æ–≥–¥–∞ –ø—Ä–∏–º—É—Ç –∑–∞—è–≤–æ—á–∫—É')
        print(await state.get_state())
    else:
        await state.clear()
        await state.update_data(username=message.from_user.username)
        await state.update_data(user_id=message.from_user.id)
        await state.update_data(photoes=[])
        await typing(message)
        await message.answer('''*–í–µ–¥—ë—Ç—Å—è –Ω–∞–±–æ—Ä –≤ gay\-—á–∞—Ç–∏–∫*üè≥Ô∏è‚Äçüåà

    _–í —á–µ–º –ø–ª—é—Å?_
    –ù–∞—à —á–∞—Ç –Ω–µ–±–æ–ª—å—à–æ–π, —Ç—É—Ç –≤—Å–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∑–Ω–∞—é—Ç, –ª–∞–º–ø–æ–≤–æ–µ –æ–±—â–µ–Ω–∏–µ –∏ –æ–±–º–µ–Ω—ã –ø–æ–º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –¥—Ä—É–∑–µ–πüíñ

    ‚Ä¢ _–í–æ–∑—Ä–∞—Å—Ç_: –¥–æ 18 –ª–µ—Çüôà
    ‚Ä¢ _–ü—Ä–æ–≤–µ—Ä–∫–∞_: –∫—Ä—É–∂–æ–∫ –∏–ª–∏ —Ñ–æ—Ç–æ —Å–æ –∑–Ω–∞–∫–∞–º–∏üò≥
    ‚Ä¢ _–ö–æ–Ω–∫—É—Ä—Å_: –∏–º–µ—é—Ç—Å—èüåπ
    ‚Ä¢ _–ü—Ä–∏–∑—ã_: –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æüíï
    ‚Ä¢ _–ê–∫—Ç–∏–≤ –∏ –æ–±—â–µ–Ω–∏–µ_: –∑–∞–≤–∞–ª–∏—Å—åü´£''', parse_mode=ParseMode.MARKDOWN_V2)
        await typing(message)
        await message.answer('–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –∫ —Ç–µ–±–µ –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?^^')
        await state.set_state(RegistrationStates.name)


@reg_router.message(RegistrationStates.name, NameFilter(20), F.text)
async def known_name(message: Message, state: FSMContext):
    await typing(message)
    await state.update_data(name=message.text)
    await message.answer('–ö—Ä–∞—Å–∏–≤–æ–µ –∏–º—è^^ –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    await state.set_state(RegistrationStates.age)


@reg_router.message(RegistrationStates.name)
async def known_name_error(message: Message):
    await typing(message)
    await message.answer('–£–ø—Å, –≤–∏–¥–∏–º–æ —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫ —Å —Ç–≤–æ–∏–º –∏–º–µ—á–∫–æ–º^^" –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')


@reg_router.message(RegistrationStates.age, AgeLimit(), F.text)
async def known_age(message: Message, state: FSMContext):
    await state.update_data(age=int(message.text))
    await typing(message)
    await message.answer('–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –∫ –Ω–∞–º –∑–∞—Ö–æ–¥–∏–ª–∏ —Ç–æ–ª—å–∫–æ –¥–µ—Ç–∏^^',
                         reply_markup=checking_choise_markup)
    await state.set_state(RegistrationStates.task)


@reg_router.message(RegistrationStates.age)
async def known_age_error(message: Message):
    await typing(message)
    await message.answer('–ö–∞–∫–∞—è —Ç–æ –æ—à–∏–±–æ—á–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞( –õ–∏–±–æ —Ç–µ–±–µ 18 –∏–ª–∏ –±–æ–ª—å—à–µ, –ª–∏–±–æ —Ç—ã —Å–æ–≤—Å–µ–º –Ω–µ —á–∏—Å–ª–æ –Ω–∞–ø–∏—Å–∞–ª. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑^^')


@reg_router.callback_query(RegistrationStates.video_note, F.data == 'cancel')
@reg_router.callback_query(RegistrationStates.photoes, F.data == 'cancel')
async def cancelled(callback: CallbackQuery, state: FSMContext):

    data = await state.get_data()
    data.get('photoes').clear()
    await typing(callback.message)
    await callback.message.answer('–í—ã–±–µ—Ä–∏ —Ç–∏–ø –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –∫ –Ω–∞–º –∑–∞—Ö–æ–¥–∏–ª–∏ —Ç–æ–ª—å–∫–æ –¥–µ—Ç–∏^^',
                                  reply_markup=checking_choise_markup)
    await state.set_state(RegistrationStates.task)
    await callback.answer()


def generate_video_note_task():
    hand_emojies_set = set()
    while len(hand_emojies_set) < 2:
        hand_emojies_set.add(choice(hand_emojies))
    return '–ó–∞–ø–∏—à–∏ –∫—Ä—É–∂–æ—á–µ–∫, –≥–¥–µ —Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ—à—å –≥—Ä—É–¥—å –∏ —Ç–æ—Ä—Å (–º–æ–∂–Ω–æ –∏ –±–µ–∑ –ª–∏—Ü–∞ –∏ –≥–æ–ª–æ—Å–∞) \
–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—à—å 2 –∂–µ—Å—Ç–∞: {} –∏ {}'.format(*list(hand_emojies_set))


@reg_router.callback_query(RegistrationStates.task, F.data == 'video_note')
async def video_note_task(callback: CallbackQuery, state: FSMContext):
    task = generate_video_note_task()
    await state.update_data(task=task)
    await state.set_state(RegistrationStates.video_note)
    await typing(callback.message)
    await callback.message.answer(f'–ò—Ç–∞–∫, –≤–æ—Ç —Ç–≤–æ—è –∑–∞–¥–∞—á–∞:\n\n{task}', reply_markup=checking_cancel_markup)
    await callback.answer()


@reg_router.message(RegistrationStates.video_note, F.video_note)
async def video_note_check(message: Message, state: FSMContext):
    await state.set_state(RegistrationStates.checking)
    data = await state.get_data()
    keyboard = await make_keyboard_accepting(data.get('user_id'))
    await typing(message)
    await message.answer('–û–∫–∏, —Å–µ–π—á–∞—Å –≤—Å—ë –ø—Ä–æ–≤–µ—Ä—è—Ç –∏ —è —Å–∫–∞–∂—É, –Ω–æ—Ä–º–∏–∫ –∏–ª–∏ –Ω–µ—Ç^^')
    await message.bot.send_video_note(ADMIN_GROUP_ID, message.video_note.file_id)
    await message.bot.send_message(ADMIN_GROUP_ID, f'–ß—É–≤–∞—á–æ–∫ @{message.from_user.username} —Å–∫–∞–∑–∞–ª, \
—á—Ç–æ –æ–Ω {data.get('name')}, –µ–º—É {data.get('age')} –∏ –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª –∫—Ä—É–∂–æ–∫ c —Ç–∞–∫–æ–π –∑–∞–¥–∞—á–µ–π:\n\n{data.get('task')}\n\n–ü—Ä–∏–Ω–∏–º–∞–µ–º???', reply_markup=keyboard)


def generate_photoes_task():
    hand_emojies_set = set()
    while len(hand_emojies_set) < 3:
        hand_emojies_set.add(choice(hand_emojies))
    return 'C–∫–∏–Ω—å 3 —Ñ–æ—Ç–∫–∏ —Å 3 –Ω—É–∂–Ω—ã–º–∏ –∂–µ—Å—Ç–∞–º–∏: {}, {}, –∏ {}. –í—Ä–µ–º—è –ø–æ—Ç—Ä–∞—Ç—å –Ω–µ –±–æ–ª—å—à–µ 10 –º–∏–Ω—É—Ç'.format(*list(hand_emojies_set))


@reg_router.callback_query(RegistrationStates.task, F.data == 'photoes')
async def video_note_task(callback: CallbackQuery, state: FSMContext):
    task = generate_photoes_task()
    await state.update_data(task=task)
    await state.update_data(time=time())
    await state.set_state(RegistrationStates.photoes)
    await typing(callback.message)
    await callback.message.answer(f'–ò—Ç–∞–∫, –≤–æ—Ç —Ç–≤–æ—è –∑–∞–¥–∞—á–∞:\n\n{task}', reply_markup=checking_cancel_markup)
    await callback.answer()


@reg_router.message(RegistrationStates.photoes, F.photo)
async def video_note_check(message: Message, state: FSMContext):
    data = await state.get_data()
    if (time() - data.get('time')) <= 600:
        photoes = data.get('photoes')
        photoes.append(message.photo[-1])
        if len(photoes) >= 3:
            local_photoes = photoes.copy()
            photoes.clear()
            await state.set_state(RegistrationStates.checking)
            keyboard = await make_keyboard_accepting(data.get('user_id'))
            await typing(message)
            await message.answer('–û–∫–∏, —Å–µ–π—á–∞—Å –≤—Å—ë –ø—Ä–æ–≤–µ—Ä—è—Ç –∏ —è —Å–∫–∞–∂—É, –Ω–æ—Ä–º–∏–∫ –∏–ª–∏ –Ω–µ—Ç^^')
            await message.bot.send_photo(ADMIN_GROUP_ID, local_photoes[0].file_id)
            await message.bot.send_photo(ADMIN_GROUP_ID, local_photoes[1].file_id)
            await message.bot.send_photo(ADMIN_GROUP_ID, local_photoes[2].file_id)
            await message.bot.send_message(ADMIN_GROUP_ID, f'–ß—É–≤–∞—á–æ–∫ @{message.from_user.username} —Å–∫–∞–∑–∞–ª, \
—á—Ç–æ –æ–Ω {data.get('name')}, –µ–º—É {data.get('age')} –∏ –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ—á–∫–∏ c —Ç–∞–∫–∏–º –∑–∞–¥–∞–Ω–∏–µ–º:\n\n{data.get('task')}\n\n–ü—Ä–∏–Ω–∏–º–∞–µ–º???', reply_markup=keyboard)
    else:
        await message.answer('–¢—ã –Ω–µ —É—Å–ø–µ–ª( –ù–∞–∂–º–∏ "–û—Ç–º–µ–Ω–∞" –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑', reply_markup=checking_cancel_markup)


@admin_chat_router.callback_query(F.data.startswith('accepted'))
async def accepted(callback: CallbackQuery):
    user_id = callback.data.split('_')[-1]
    await typing(callback.message)
    await callback.bot.send_message(user_id, RULES, parse_mode=ParseMode.HTML)
    await typing(callback.message)
    await callback.bot.send_message(user_id, '–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–æ—á–∫—É! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—à —á–∞—Ç–∏–∫^^ <—Ç–∏–ø–æ —Å—Å—ã–ª–∫–∞>. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å^^ –ü–æ–∑–∂–µ, –∏—Å–ø–æ–ª—å–∑—É–π "/start" –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ—Ñ–∏–ª—è^^ –¢–∞–∫–∂–µ —Å–æ–≤–µ—Ç—É—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –≤—ã—à–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –±–∞–Ω^^',
                                    reply_markup=await make_profile_markup(user_id))
    await callback.message.edit_text(text='‚úÖ', reply_markup=None)


@admin_chat_router.callback_query(F.data.startswith('rejected'))
async def accepted(callback: CallbackQuery):
    user_id = callback.data.split('_')[-1]
    await typing(callback.message)
    await callback.bot.send_message(user_id, '–¢—ã –Ω–µ –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–æ—á–∫—É( –ù–∞–ø–∏—à–∏ /restart —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ')
    await callback.message.edit_text(text='‚ùé', reply_markup=None)


@reg_router.callback_query(RegistrationStates.checking, F.data.startswith('profile'))
async def profile(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await new_user(data.get('user_id'), data.get('name'), data.get('username'), data.get('age'))
    await state.clear()
    await state.update_data(id=data.get('user_id'))
    await callback.answer()
    await start(callback.message, state)
